name: "Build"
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened, synchronize]
jobs:
  build:
    strategy:
      matrix:
        include:
          - { os: 'macos-latest', arch: 'x64', release-target-jdk: '8', gradle-jdk: '21', gradle-version: '8.5' }
          - { os: 'ubuntu-latest', arch: 'x64', release-target-jdk: '8', gradle-jdk: '21', gradle-version: '8.5' }
          - { os: 'windows-latest', arch: 'x64', release-target-jdk: '8', gradle-jdk: '21', gradle-version: '8.5' }
    name: >
      Gradle ${{ matrix.gradle-version }} w/JDK ${{ matrix.gradle-jdk }} on
      ${{ matrix.os }} (${{ matrix.arch }}) using toolchain JDK ${{ matrix.release-target-jdk}}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Configure JDKs
        uses: actions/setup-java@v4.0.0
        with:
          architecture: ${{ matrix.arch }}
          distribution: 'temurin'
          java-version: |
            ${{ matrix.release-target-jdk }}
            11
            17
            ${{ matrix.gradle-jdk }}
      - name: Build project
        uses: gradle/gradle-build-action@v2.10.0
        with:
          # Only write to the cache on the 'main' branch
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}
          gradle-version: ${{ matrix.gradle-version }}
          arguments: >
            build --info --console plain
            -Dorg.gradle.java.installations.auto-detect=true
            -Dorg.gradle.java.installations.auto-download=false
      - name: Upload build reports
        uses: actions/upload-artifact@v3
        if: env.ACT != 'true' && always()
        with:
          name: build-reports-${{ matrix.os }}-${{ matrix.arch }}-gradle-jdk-${{ matrix.gradle-jdk }}-release-target-jdk-${{ matrix.release-target-jdk }}
          path: |
            build/reports
            ./**/build/reports
